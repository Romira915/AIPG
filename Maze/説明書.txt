迷路を解くプログラムを作成してください．
SearchPathプロジェクトにベースとなるプログラムがあるので，それを使うのがいいと思います．
課題としてmaze8060A.csvファイル 〜 maze8060F.csvファイルの６つの迷路を解いてください．
maze8060A.csv はゴールに辿り着く道が一つだけです．
maze8060B.csv 〜 maze8060F.csv はゴールに辿り着く道が複数あります．最短の道を見つけるほうがいいです．
迷路を解いたら作成したプログラム：【SearchPath.cpp】を提出してください．
【注意】評価は皆さんに渡していない迷路maze8060G.csvも含めて行います．

迷路は以下の様なCSV形式のファイルで与えられます．
　　１行目：迷路の大きさ（横と縦）ただし，１個おきの通路の数です．壁も含む迷路の大きさはその２倍＋１になります．
　　２行目以降：迷路のデータ（-1が壁，0が通路）
　　スタートは一番左上の通路，ゴールは一番右下の通路としてください．

解いた迷路は同様に以下の様なCSV形式のファイルで書き出してください．
　　１行目：迷路の大きさ（横と縦）
　　２行目以降：迷路のデータ
　　　（-1が壁，
　　　　0が未探索の通路，
　　　　1〜999が探索した通路で答えでないもの，
　　　　1000〜が見つけた答えの通路，

SearchPathプロジェクトでは
　readMaze関数により迷路が読み込まれ，writeMaze関数により迷路が書き込まれます．
　　wに横の大きさ
　　hに縦の大きさ
　　maze[縦の座標][横の座標](２次元配列)に上記の値
　readMaze関数で迷路を読み込んだ後，
　２次元配列のmazeを探索しながら値を書き込んでいき，答えの通路には1000以上の値を書き込みます．
　スタートはmaze[1][1]，ゴールはmaze[2*h-1][2*w-1]となります．
　その後，writeMaze関数で迷路を書き出してください．
　デバッグ開始でプロジェクトを動かした場合は SearchPathプロジェクトフォルダに maze8060A-out.csv 〜 maze8060F-out.csv というファイルで結果が出力されます．

SearchPathプロジェクトにはList.hとList.cppがあります．
山澤が横型探索やA*探索のために作ったリスト構造のためのプログラムです．
もし，理解できるのなら使ってくれても構いません．

CSVファイルの表示にはMakeMazeプロジェクトを使ってください．
　Visual Studio から MakeMazeプロジェクトを右クリックしてデバッグ開始するか，
　ビルド後，エクスプローラーからMakeMaze\bin\Debugフォルダの中にある，MakeMaze.exeを実行してください．
　「迷路読込」ボタンを押し，読み込みたいCSVファイルを指定すれば迷路が表示されます．
　　-1：壁は青
　　0：未探索の通路は白
　　1以上：探索した通路は緑から赤色
　緑から赤色の表示については色調整値を変更すると色が変わります．

MakeMazeにはその他の機能もあります．
　横と縦の大きさを指定して「迷路を生成」
　生成した迷路を「迷路保存」でCSV形式で保存
　表示されている迷路を「画像保存」でPNG形式の画像ファイルで保存

では，がんばってください．